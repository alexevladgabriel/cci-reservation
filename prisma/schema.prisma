// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "sqlite"
    url                  = "file:./db.sqlite"
    // url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    refresh_token_expires_in Int?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    reviews       Review[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Location {
    id          String   @id @default(cuid())
    name        String
    description String?
    street      String
    city        String
    postal_code String?
    createdAt   DateTime @default(now())
    // Relationships
    review      Review[]
}

model Review {
    id          String   @id @default(cuid())
    user_id     String
    location_id String
    rating      Int
    content     String
    createdAt   DateTime @default(now())
    // Relationships
    user        User     @relation(fields: [user_id], references: [id])
    location    Location @relation(fields: [location_id], references: [id])
}
